name: Build Windows Packages

on:
  workflow_dispatch:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
        default: gfx1151
      expect_failure:
        type: boolean
      extra_cmake_options:
        type: string

  workflow_call:
    inputs:
      package_version:
        type: string
        default: ADHOCBUILD
      amdgpu_families:
        type: string
      expect_failure:
        type: boolean
      extra_cmake_options:
        type: string

permissions:
  contents: read

jobs:
  build_windows_packages:
    name: Build Windows Packages (xfail ${{ inputs.expect_failure }})
    runs-on: azure-windows-scale-rocm
    continue-on-error: ${{ inputs.expect_failure }}
    permissions:
      id-token: write
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
    env:
      BUILD_DIR: B:\build
      CACHE_DIR: "${{github.workspace}}/.cache"
      CCACHE_DIR: "${{github.workspace}}/.cache/ccache"
      CCACHE_MAXSIZE: "4000M"
      TEATIME_FORCE_INTERACTIVE: 0
      AMDGPU_FAMILIES: ${{ inputs.amdgpu_families }}
      IS_PR_FROM_FORK: ${{ github.event.pull_request.head.repo.fork }}
    steps:
      - name: "Checking out repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.12"

      - name: Install python deps
        run: |
          pip install -r requirements.txt

      - name: Install requirements
        run: |
          choco install --no-progress -y ccache
          # ninja pinned due to a bug in the 1.13.0 release:
          # https://github.com/ninja-build/ninja/issues/2616
          choco install --no-progress -y ninja --version 1.12.1
          choco install --no-progress -y strawberryperl
          echo "$PATH;C:\Strawberry\c\bin" >> $GITHUB_PATH
          choco install --no-progress -y awscli
          echo "$PATH;C:\Program Files\Amazon\AWSCLIV2" >> $GITHUB_PATH

      - uses: iterative/setup-dvc@4bdfd2b0f6f1ad7e08afadb03b1a895c352a5239 # v2.0.0
        with:
          version: '3.62.0'

      # After other installs, so MSVC get priority in the PATH.
      - name: Configure MSVC
        uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0

      - name: Runner Health Settings
        run: |
          echo "CCACHE_DIR=${CCACHE_DIR}"
          df -h
          mkdir -p $CCACHE_DIR

          echo "cmake: $(which cmake)"
          cmake --version
          echo "ninja: $(which ninja)"
          ninja --version
          echo "CC: $CC"
          echo "CXX: $CXX"

          echo "python: $(which python), python3: $(which python3)"
          python --version

          echo "gcc: $(which gcc)"
          gcc --version
          echo "perl: $(which perl)"
          perl --version
          echo "gfortran: $(which gfortran)"
          gfortran --version

          echo "Git version: $(git --version)"
          git config fetch.parallel 1
          nthreads=$(nproc --all)
          echo [*] Logical Processors available: $nthreads...

      # TODO: We shouldn't be using a cache on actual release branches, but it
      # really helps for iteration time.
      - name: Enable cache
        uses: actions/cache/restore@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ${{ env.CACHE_DIR }}
          key: windows-build-packages-v4-${{ inputs.amdgpu_families }}-${{ github.sha }}
          restore-keys: |
            windows-build-packages-v4-${{ inputs.amdgpu_families }}-

      - name: Fetch sources
        timeout-minutes: 30
        run: |
          git config --global core.symlinks true
          git config --global core.longpaths true
          python ./build_tools/fetch_sources.py --jobs 1

      - name: Configure Projects
        env:
          amdgpu_families: ${{ inputs.amdgpu_families }}
          package_version: ${{ inputs.package_version }}
          extra_cmake_options: ${{ inputs.extra_cmake_options }}
        run: |
          # clear cache before build and after download
          ccache -z
          python3 build_tools/github_actions/build_configure.py

      - name: Build therock-dist
        run: cmake --build "${{ env.BUILD_DIR }}" --target therock-dist

      - name: Build therock-archives
        run: cmake --build "${{ env.BUILD_DIR }}" --target therock-archives

      - name: Report
        if: ${{ !cancelled() }}
        run: |
          echo "Build dir:"
          echo "------------"
          ls -lh "${{ env.BUILD_DIR }}"
          echo "Artifact Archives:"
          echo "------------------"
          ls -lh "${{ env.BUILD_DIR }}"/artifacts/*.tar.xz
          echo "Artifacts:"
          echo "----------"
          du -h -d 1 "${{ env.BUILD_DIR }}"/artifacts
          echo "CCache Stats:"
          echo "-------------"
          ccache -s

      - name: "Build size report"
        if: always()
        shell: powershell
        run: |
          $fs = Get-PSDrive -PSProvider "FileSystem"
          $fsout = $fs | Select-Object -Property Name,Used,Free,Root
          $fsout | % {$_.Used/=1GB;$_.Free/=1GB;$_} | Write-Host
          get-disk | Select-object @{Name="Size(GB)";Expression={$_.Size/1GB}} | Write-Host

      - name: Configure AWS Credentials for non-forked repos
        if: ${{ always() && !github.event.pull_request.head.repo.fork }}
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::692859939525:role/therock-artifacts

      - name: Post Build Upload
        if: always()
        run: |
          python3 build_tools/github_actions/post_build_upload.py \
            --run-id ${{ github.run_id }} \
            --amdgpu-family ${{ env.AMDGPU_FAMILIES }} \
            --build-dir ${{ env.BUILD_DIR }} \
            --upload

      - name: Save cache
        uses: actions/cache/save@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        if: ${{ !cancelled() }}
        with:
          path: ${{ env.CACHE_DIR }}
          key: windows-build-packages-v4-${{ inputs.amdgpu_families }}-${{ github.sha }}
